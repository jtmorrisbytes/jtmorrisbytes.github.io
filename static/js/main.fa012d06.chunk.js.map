{"version":3,"sources":["assets/img/GitHub_Logo.png","components/Card/index.js","components/About/index.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","react_default","a","createElement","id","className","children","About","components_Card","href","src","GithubLogo","alt","Nav","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","React","Component","App","components_Nav","components_About","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sPCSzBC,qBANF,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,GAAIJ,EAAMI,GAAIC,UAAU,QAC/BL,EAAMM,4BCmBAC,EApBD,SAACP,GACX,OAAOC,EAAAC,EAAAC,cAACK,EAAD,CAAMJ,GAAG,SACZH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UACNH,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACJH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBC,UAAU,gBAC/BJ,EAAAC,EAAAC,cAAA,KAAGM,KAAK,wCAAuCR,EAAAC,EAAAC,cAAA,OAAKO,IAAKC,IAAYC,IAAI,kBAE7EX,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBAAmBC,UAAU,gBACjCJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qDCYdQ,qBAlBX,SAAAA,IAAc,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,6EAIV,OAAOf,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACJH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAb,kBAEJJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAAA,KAAGC,GAAG,QAAQK,KAAK,UAAnB,SACAR,EAAAC,EAAAC,cAAA,KAAGC,GAAG,WAAWK,KAAK,aAAtB,YACAR,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UAAUK,KAAK,YAArB,WACAR,EAAAC,EAAAC,cAAA,KAAGC,GAAG,SAASK,KAAK,0pBAApB,oBAbEW,IAAMC,kBCGTC,MATf,WACE,OACErB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,QCGgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fa012d06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GitHub_Logo.cefc2023.png\";","import React from 'react'\r\nimport \"./Card.css\"\r\n\r\nconst Card = (props) => {\r\n    return <div id={props.id} className=\"card\">\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default Card","import React from \"react\"\r\nimport \"./About.css\"\r\nimport Card from \"../Card/\"\r\nimport GithubLogo from \"../../assets/img/GitHub_Logo.png\"\r\nconst About = (props) =>{\r\n    return <Card id='About'>\r\n        <a id=\"About\"></a>\r\n        <h1>Jordan Morris</h1>\r\n        {/* add padding after the name */}\r\n        <div className=\"subheading\">\r\n            <h2>Full Stack</h2>\r\n            <h3>Web Developer</h3>\r\n        </div>\r\n        <div id=\"profile-links\">\r\n            <div id=\"github-profile\" className='profile-link'>\r\n                <a href=\"https://www.github.com/jtmorrisbytes\"><img src={GithubLogo} alt='github-logo' /></a>\r\n            </div>\r\n            <div id=\"linkedin-profile\" className='profile-link'>\r\n                <p className='link-text'></p>\r\n            </div>\r\n        </div>\r\n        \r\n    </Card>\r\n}\r\nexport default About;","/*\r\n    Nav.js\r\n\r\n    The main navigation for the webpage\r\n\r\n\r\n*/\r\nimport React from \"react\"\r\nimport \"./Nav.css\"\r\n\r\n\r\nclass Nav extends React.Component {\r\n    constructor(){\r\n        super()\r\n    }\r\n    render(){\r\n        return <nav id=\"main-navigation\">\r\n            <div id=\"brand\">\r\n                <p className=\"logo-text\">jtmorrisbytes</p>\r\n            </div>\r\n            <div id=\"nav-links\">\r\n                <a id=\"about\" href=\"#About\">About</a>\r\n                <a id=\"projects\" href=\"#Projects\">Projects</a>\r\n                <a id=\"contact\" href=\"#Contact\">Contact</a>\r\n                <a id=\"resume\" href=\"https://www.linkedin.com/ambry/?x-li-ambry-ep=AQFEnHdhyLaoEAAAAWse7zdVmqGksFfq-sZOy2ws8c3NZxojIIz8n-mkz-yWB5VjUegWTrDiQNAno0ewbCg5V_-k_aK2CxnlA2dSc9kzeKkVaKqdM8dcDysnt1WMxoVG-wdfDh-QL7ro5SNbuNcFLKET7bhbNXWaI07zp7jUrzBJOv1ZZQ7jNkDkUaiw_2Qn153x_aQGanQxWCvMDKd-oPDf_6Cm6bmk7eJpD6HBGK7J78A0j48UvisUkxz655GhG6vV1gKiSQhj0yj7yWvvl0CbiRKtM7aoIMo2HQj4O2265WblSWd2a_OSCQDWFN6PhUwo-TIy3pJpPZV8MnOrJ7putrAldEGUrDqwGoxukvAJjJMp1-BPsBv2BqDXJEmx-u4PnfJoiSkMSJ2DWBgHhhhZRo41_xSIU96ASzePPN2FUyICa72ExLWQAQo3jfsc4MyMFIAfNUphm-LmvWe2oKPbwzui7_ea0TQSHvo9goUhU1t0tIUy89PtVhF5D9OQeM21yUzNahC0tQPdFE0hlzzxdMgmhJHuozuiOLFJios1ESMIVT46OD9uR6NLhTgD&x-ambry-um-filename=Jordan%20Morris.pdf\">Resume </a>\r\n            </div>\r\n\r\n        </nav>\r\n    }\r\n}\r\nexport default Nav","import React from 'react';\r\nimport About from './components/About'\r\nimport Nav from \"./components/Nav\"\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Nav />\r\n    <About />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}